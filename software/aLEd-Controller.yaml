substitutions:
  name: cct-led-test
  devicename: "cct-led-test"
  friendly_name: "cct-led-test"
  long_devicename: "cct-led-test Analog LED controller (ESP32) Device"

esphome:
  name: ${name}

external_components:
  - source: github://pr#4579
    components: [waveshare_epaper]

esp32:
  board: esp32dev
  framework:
    type: arduino

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none
  #domain: .local

  ap:
    ssid: "$devicename Fallback"
    password: !secret wifi_password

web_server:
  port: 80


captive_portal:

logger:

dallas:
  - pin: GPIO18

api:

time:
  - platform: homeassistant
    id: homeassistant_time

font:

  - file: "gfonts://Roboto"
    id: font1
    size: 20

  - file: "gfonts://Roboto"
    id: font_large
    size: 30

  - file: "gfonts://Roboto"
    id: font_small
    size: 8

  - file:
      type: gfonts
      family: Roboto
      weight: 900
    id: font2
    size: 16

  # Include Material Design Icons font
  # It should be saved to config/esphome/fonts folder

  - file: 'fonts/materialdesignicons-webfont.ttf'
    id:  mdi_wifi
    size: 15
    glyphs:
      - "\U000F092B" # mdi-wifi-strength-alert-outline
      - "\U000F091F" # mdi-wifi-strength-1
      - "\U000F0922" # mdi-wifi-strength-2
      - "\U000F0925" # mdi-wifi-strength-3
      - "\U000F0928"  # mdi-wifi-strength-4


color:
  - id: my_light_red
    red: 100%
    green: 20%
    blue: 25%
    white: 0%

graph:
  # Show bare-minimum auto-ranged graph
  - id: temperature_graph
    duration: 24h
    x_grid: 10min
    y_grid: 1.0
    width: 120
    height: 40
    traces:
      - sensor: pcb_temp
        line_type: DOTTED
        line_thickness: 2
      - sensor: sht40_temp
        line_type: SOLID
        line_thickness: 3


i2c:
  sda: 21
  scl: 22
  scan: true

# Setup SPI

spi:
  clk_pin: 15
  mosi_pin: 16

# Configuration for the display
display:
  - platform: waveshare_epaper
    model: 2.90inv2
    id: eink_display
    cs_pin: 27
    dc_pin: 17
    busy_pin: 25
    reset_pin: 23
    full_update_every: 90
    rotation: 270째
    lambda: |-
      it.strftime(1, 1, id(font_large), "%I:%M %p ", id(homeassistant_time).now());
      it.strftime(1, 30, id(font1), "%a, %d %b %Y", id(homeassistant_time).now());
      it.printf(175, 40, id(font_small), "Temperature");
      it.printf(250, 40, id(font_small), "Humidity");
      it.printf(170, 50, id(font1), "%.1f째C,  %.1f%%", id(sht40_temp).state, id(sht40_hum).state);
      it.graph(170, 75, id(temperature_graph));
      it.printf(220, 117, id(font_small), "PCB Temp: %.1f째C", id(pcb_temp).state);
      it.printf(1, 65, id(font1), "CH1: ");
      it.printf(1, 85, id(font1), "CH2: ");
      it.printf(1, 105, id(font1), "CH3: ");

      it.printf(50, 65, id(font1),  "%s", id(light1_br).state.c_str() );
      it.printf(50, 85, id(font1),  "%s", id(light2_br).state.c_str() );
      it.printf(50, 105, id(font1),  "%s", id(light3_br).state.c_str() );

      /* WiFi Signal Strenght */
      if(id(wifisignal).has_state()) {
        int x = 288;
        int y = 15;
        if (id(wifisignal).state >= -50) {
            //Excellent
            it.print(x, y, id(mdi_wifi), TextAlign::BASELINE_CENTER, "\U000F0928");
            //ESP_LOGI("WiFi", "Exellent");
        } else if ( (id(wifisignal).state  >= -60) && (id(wifisignal).state  < -50) ) {
            //Good
            it.print(x, y, id(mdi_wifi), TextAlign::BASELINE_CENTER, "\U000F0925");
            //ESP_LOGI("WiFi", "Good");
        } else if ( (id(wifisignal).state  >= -75) && (id(wifisignal).state  < -60) ) {
            //Fair
            it.print(x, y, id(mdi_wifi), TextAlign::BASELINE_CENTER, "\U000F0922");
            //ESP_LOGI("WiFi", "Fair");
        } else if ( (id(wifisignal).state  >= -100) && (id(wifisignal).state  < -75) ) {
            //Weak
            it.print(x, y, id(mdi_wifi), TextAlign::BASELINE_CENTER, "\U000F091F");
            //ESP_LOGI("WiFi", "Weak");
        } else {
            //Unlikely working signal
            it.print(x, y, id(mdi_wifi), TextAlign::BASELINE_CENTER, "\U000F092B");
            //ESP_LOGI("WiFi", "Unlikely");
        }
      }

text_sensor:
  - platform: template
    name: "Light1 Brightness"
    id: "light1_br"
    update_interval: 1s
    lambda: |-
      int brt = id(light1).current_values.get_brightness() * 100;
      if (id(light1).current_values.is_on()) {
        
        return to_string(brt) + "%";
      } else {
         return {"OFF"};
      }

  - platform: template
    name: "Light2 Brightness"
    id: "light2_br"
    update_interval: 1s
    lambda: |-
      int brt = id(light2).current_values.get_brightness() * 100;
      if (id(light2).current_values.is_on()) {
        
        return to_string(brt) + "%";
      } else {
         return {"OFF"};
      }

  - platform: template
    name: "Light3 Brightness"
    id: "light3_br"
    update_interval: 1s
    lambda: |-
      int brt = id(light3).current_values.get_brightness() * 100;
      if (id(light3).current_values.is_on()) {
        
        return to_string(brt) + "%";
      } else {
         return {"OFF"};
      }


sensor:

  - platform: wifi_signal
    name: "WiFi Signal $devicename"
    id: wifisignal
    update_interval: 30s

  - platform: bh1750
    name: "BH1750 Illuminance"
    address: 0x23
    update_interval: 5s

  - platform: adc
    pin: SVP
    id: pcb_temp
    name: "${name} PCB Temp"
    device_class: temperature
    unit_of_measurement: "째C"
    update_interval: 10s
    attenuation: 11db
    filters:
      - lambda: |-
          auto temp = (x -0.5)/0.01;
          return temp;

  - platform: adc
    id: source_sensor
    pin: 33
    update_interval: 5s
    name: "${name} test LUX"
    internal: True
    device_class: illuminance
    unit_of_measurement: lx
    attenuation: 11db

  - platform: dallas
    address: 0x2a0000002fa8f828
    name: "DS18B20 Temperature"

  - platform: sht4x
    temperature:
      name: "${name}_Temperature"
      id: sht40_temp
      filters:
        - offset: -3.5
    humidity:
      name: "${name}_Humidity"
      id: sht40_hum
    update_interval: 10s

  - platform: ina226
    address: 0x40
    shunt_resistance: 0.019 ohm
    current:
      name: "INA226 Current"
    power:
      name: "INA226 Power"
    bus_voltage:
      name: "INA226 Bus Voltage"
    shunt_voltage:
      name: "INA226 Shunt Voltage"
    max_current: 10A
    update_interval: 10s

binary_sensor:

  - platform: gpio
    pin:
      number: GPIO35
    name: "Touch button 1"
    filters:
      - delayed_on: 10ms
    on_release:
      then:
        - light.toggle: light1
        
  - platform: gpio
    pin:
      number: GPIO34
    name: "Touch button 2"
    filters:
      - delayed_on: 10ms
    on_release:
      then:
        - light.toggle: light1

  - platform: gpio
    pin:
      number: SVN
    name: "Touch button 3"
    filters:
      - delayed_on: 10ms
    on_release:
      then:
        - light.toggle: light1

switch:
  - platform: restart
    name: ${name}-restart
    id: restart_switch

output:
  - platform: ledc
    pin: GPIO02
    frequency: 19531Hz
    id: LED_channel_1
  - platform: ledc
    pin: GPIO04
    frequency: 19531Hz
    id: LED_channel_2
  - platform: ledc
    pin: GPIO13
    frequency: 19531Hz
    id: LED_channel_3
  - platform: ledc
    pin: GPIO12
    frequency: 19531Hz
    id: LED_channel_4
  - platform: ledc
    pin: GPIO14
    frequency: 19531Hz
    id: LED_channel_5
  - platform: ledc
    pin: GPIO26
    frequency: 19531Hz
    id: LED_channel_6

light:
  - platform: cwww
    name: "CCT Light 1"
    id: light1
    warm_white: LED_channel_1
    cold_white: LED_channel_2
    cold_white_color_temperature: 153 mireds
    warm_white_color_temperature: 500 mireds
    #color_interlock: True
    restore_mode: RESTORE_DEFAULT_OFF
    gamma_correct: 2

  - platform: cwww
    name: "CCT Light 2"
    id: light2
    cold_white: LED_channel_3
    warm_white: LED_channel_4
    cold_white_color_temperature: 153 mireds
    warm_white_color_temperature: 500 mireds
    #color_interlock: True
    restore_mode: RESTORE_DEFAULT_OFF
    gamma_correct: 2

  - platform: cwww
    name: "CCT Light 3"
    id: light3
    cold_white: LED_channel_5
    warm_white: LED_channel_6
    cold_white_color_temperature: 153 mireds
    warm_white_color_temperature: 500 mireds
    #color_interlock: True
    restore_mode: RESTORE_DEFAULT_OFF
    gamma_correct: 2

    effects:
      - random:          
          name: "My Slow Random Effect"
          transition_length: 20s
          update_interval: 20s
      - random:
          name: "My Fast Random Effect"
          transition_length: 4s
          update_interval: 5s
      - random:
          name: "My Insane Random Effect"
          transition_length: 1s
          update_interval: 1s
      - random:          
          name: "Totally loco"
          transition_length: 300ms
          update_interval: 250ms
          
